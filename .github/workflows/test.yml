name: Test
on:
  - push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint
        uses: astral-sh/ruff-action@v2
        with:
          args: 'check'

      - name: Format
        uses: astral-sh/ruff-action@v2
        with:
          args: 'format --check'

      - name: Install ffmpeg
        run: |
          wget -O - https://raw.githubusercontent.com/jontybrook/ffmpeg-install-script/main/install-ffmpeg-static.sh | bash -s -- --stable --force

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Run type checking
        run: mypy .

      - name: Download code coverage reporter and notify Code Climate of the build
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run tests
        run: pytest --cov-report=xml

      - name: Notify Code Climate that the build is done
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: ./cc-test-reporter after-build --coverage-input-type=coverage.py --exit-code $?
